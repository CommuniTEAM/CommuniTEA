name: Frontend CI

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'frontend/**'
      - '!frontend/node_modules'

# Cancel the workflow in progress if newer build is about to start.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


permissions:
  checks: write
# Uncomment for unit tests
  # pull-requests: write

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 'frontend' folder
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            frontend
            biome.json
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Run Biome
        run: biome ci .

  tsc-typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 'frontend' folder
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            frontend
      - name: Run 'tsc'
        uses: EPMatt/reviewdog-action-tsc@v1
        with:
          level: error
          workdir: frontend
          filter_mode: nofilter
          fail_on_error: true

  vite-build:
    needs: tsc-typecheck
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout 'frontend' folder
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            frontend
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm install
      - name: Build app
        run: npx vite build

# Uncomment & fill in when ready to add unit tests
  # frontend-unit-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Add steps to run the tests here -- upload is the final step
  #     - name: Upload test coverage to Codecov
  #       uses: codecov/codecov-action@v3
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #       with:
  #         flags: frontend
